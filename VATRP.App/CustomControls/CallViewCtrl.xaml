<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:properties="clr-namespace:com.vtcsecure.ace.windows.Properties"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:conv="clr-namespace:com.vtcsecure.ace.windows.Converters"
             xmlns:controls="clr-namespace:com.vtcsecure.ace.windows.CustomControls"
             xmlns:videoWrapper="clr-namespace:VATRP.Linphone.VideoWrapper;assembly=VATRP.Linphone.VideoWrapper"
             x:Class="com.vtcsecure.ace.windows.CustomControls.CallViewCtrl"
             mc:Ignorable="d" 
             d:DesignWidth="700" d:DesignHeight="700"
    d:DataContext="{d:DesignData Source=../SampleData/CallViewSampleData.xaml}" SizeChanged="OnSizeChanged"
             >
    <UserControl.Resources>
        <conv:BoolToVisibilityConverter x:Key="bvc"/>
        <conv:BoolToVisibilityConverter x:Key="ibvc" OppositeBooleanValue="True"/>
        
        <conv:IntToVisibilityConverter x:Key="oivc" OppositeBooleanValue="True"/>
        <conv:IntToVisibilityConverter x:Key="ivc"/>
        <conv:CallStateToStringConverter x:Key="csts"/>
        <conv:CallDurationConverter x:Key="cdc"/>
        <Image x:Key="InfoImage" Source="/ACE;component/Resources/icon_info.png" />
        <Image x:Key="KeypadImage" Source="/ACE;component/Resources/keypad.png" />

    </UserControl.Resources>
    <Grid Background="{DynamicResource AppMainWindowBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Grid.RowSpan="4" x:Name="ColorAnimationBox" Background="#FFD81C1C" VerticalAlignment="Stretch" Visibility="{Binding Path=VisualizeIncoming, Converter={StaticResource bvc}, Mode=OneWay}">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=VisualizeIncoming}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever" >
                                            <DoubleAnimation  Storyboard.TargetProperty = "Opacity"
                        From="1.0" To="0.1" Duration="0:0:0.3" AutoReverse="True" />
                                            <DoubleAnimation  Storyboard.TargetProperty = "Opacity"
                            From="0.1" To="1.0" Duration="0:0:0.3" AutoReverse="True">
                                                <DoubleAnimation.EasingFunction>
                                                    <PowerEase EasingMode="EaseOut" Power="4" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>

        <StackPanel Grid.Row="0" Grid.RowSpan="4" x:Name="TextAnimationBox" HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Visibility="{Binding Path=VisualizeRinging, Converter={StaticResource bvc}, Mode=OneWay}">
                <TextBlock x:Name="RingCounterBox" Text="{Binding Path=RingCount, NotifyOnTargetUpdated=True}" 
                           Foreground="{Binding RingCounterBrush}"  >
                    <TextBlock.Triggers>
                        <EventTrigger RoutedEvent="Binding.TargetUpdated">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:1.8" From="1.0"  To="0.0" />
                                    <DoubleAnimation Storyboard.TargetProperty="FontSize" Duration="0:0:1.8" From="5" To="350" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </TextBlock.Triggers>
                </TextBlock>
            </StackPanel>

        <Grid Visibility="{Binding ShowCallParams, Converter={StaticResource bvc}}">

            <StackPanel HorizontalAlignment="Center" Orientation="Vertical" Margin="0,30">
                <TextBlock   Foreground="{DynamicResource AppMainBorderBrush}"
                            HorizontalAlignment="Center"
                       Text="{Binding CallerInfo}" FontSize="{Binding DisplayNameSize}" 
                       Visibility="{Binding CallerInfo.Length, Converter={StaticResource oivc}}"
                       />
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Margin="10,0" 
                           Foreground="{DynamicResource AppMainBorderBrush}"
                        Text="{Binding CallState, Converter={StaticResource csts} }" 
                       VerticalAlignment="Top" FontSize="{Binding InfoTextSize}" 
                       Visibility="Visible"/>
                    <TextBlock  Margin="10,0" HorizontalAlignment="Center"
                           Foreground="{DynamicResource AppMainBorderBrush}"
                        Text="{Binding Duration, Converter={StaticResource cdc}}" 
                       VerticalAlignment="Top" FontSize="{Binding InfoTextSize}" 
                       Visibility="Visible"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <StackPanel Visibility="{Binding ShowCallParams, Converter={StaticResource ibvc}}"
            Grid.Row="1" Grid.RowSpan="2" Orientation="Vertical" VerticalAlignment="Center" Margin="0,0,0,40" HorizontalAlignment="Center">
                <TextBlock HorizontalAlignment="Center" Margin="2" Text="{Binding AutoAnswer, StringFormat=AutoAnswer after {0} sec}" 
                       VerticalAlignment="Center" FontSize="{Binding InfoTextSize}" 
                           Foreground="{DynamicResource AppMainBorderBrush}"
                       Visibility="{Binding AutoAnswer, Converter={StaticResource oivc}}"/>
</StackPanel>

        <Grid Grid.Row="2" Height="70" Visibility="{Binding ShowOutgoingEndCall, Converter={StaticResource bvc}}" VerticalAlignment="Stretch">
            <Button Grid.Column="0"  Width="240" Click="OnEndCall"  
                    BorderThickness="0" HorizontalAlignment="Center" 
                    VerticalContentAlignment="Center"
                    >
                <Button.Resources>
                    <Grid x:Key="CallButtonNormal" 
                            Background="{StaticResource CallBarEndCallBg}"  
                                >
                        <TextBlock Text="Hang Up" FontSize="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </Button.Resources>

                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Opacity" Value="1" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Content" Value="{StaticResource CallButtonNormal}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid Background="Transparent">

                                        <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                                            <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.8" />
                            </Trigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Opacity" Value="0.7"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        
        <Grid Grid.Row="2" Height="70" x:Name="IncomingPanel" Visibility="{Binding ShowIncomingCallPanel, Converter={StaticResource bvc}}" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0"  Width="240" Click="AcceptCall" Margin="0,0,5,0" 
                    BorderThickness="0" HorizontalAlignment="Right" 
                    VerticalContentAlignment="Center"
                    >
                <Button.Resources>
                    <Grid x:Key="CallButtonNormal" 
                            Background="{StaticResource AcceptButtonNormalBrush}"  
                                >
                        <TextBlock Text="Accept" FontSize="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </Button.Resources>

                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Opacity" Value="1" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Content" Value="{StaticResource CallButtonNormal}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid Background="Transparent">

                                        <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                                            <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.6" />
                            </Trigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Opacity" Value="0.5"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Grid.Column="1" Click="DeclineCall" Width="240" Margin="5,0,0,0" BorderThickness="0" HorizontalAlignment="Left">
                <Button.Resources>
                    <Grid x:Key="CallButtonNormal" 
                            Background="{StaticResource CallBarEndCallBg}" >

                        <TextBlock Text="Decline" HorizontalAlignment="Center" FontSize="40" VerticalAlignment="Center" 
                               Foreground="White"/>

                    </Grid>
                </Button.Resources>

                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Opacity" Value="1" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Content" Value="{StaticResource CallButtonNormal}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid Background="Transparent">

                                        <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                                            <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.8" />
                            </Trigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Opacity" Value="0.7"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

        </Grid>

    
<StackPanel Grid.Row="0" Grid.RowSpan="3" x:Name="VideoContainer" VerticalAlignment="Center" HorizontalAlignment="Center">
            <videoWrapper:VATRPOverlay Width="690" Height="690" 
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Center"
                                       x:Name="ctrlOverlay"
                                       Visibility="{Binding ShowInfo, Converter={StaticResource bvc}}"
                                       >
                <videoWrapper:VATRPOverlay.OverlayCallInfoChild >
                    <Grid >

                        <StackPanel HorizontalAlignment="Center" Orientation="Vertical">
                            <TextBlock x:Name="CallerInfoLabel" Margin="0,10" Foreground="White"
                            HorizontalAlignment="Center" Text="" FontSize="30" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Margin="10,0" x:Name="CallStateLabel" Text=""
                           Foreground="White" VerticalAlignment="Top" FontSize="20" />
                                <TextBlock  Margin="10,0" HorizontalAlignment="Center"
                           Foreground="White" x:Name="CallDurationLabel" VerticalAlignment="Top" 
                                            FontSize="20" 
                       />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </videoWrapper:VATRPOverlay.OverlayCallInfoChild >
                
                        <videoWrapper:VATRPOverlay.OverlayNumpadChild >
                    <Grid Background="White" Opacity="0.5">
                            <Grid.RowDefinitions>
                            <RowDefinition Height="1"/>
                            <RowDefinition Height="75"/>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="75"/>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="75"/>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="75"/>
                            <RowDefinition Height="1"/>
                        </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1"/>
                            <ColumnDefinition Width="75"/>
                                <ColumnDefinition Width="1"/>
                                <ColumnDefinition Width="75"/>
                                <ColumnDefinition Width="1"/>
                                <ColumnDefinition Width="75"/>
                            <ColumnDefinition Width="1"/>
                        </Grid.ColumnDefinitions>
                            <Button  Grid.Column="1"  x:Name="buttonKeyPad1" Style="{StaticResource KeypadButtonStyle}" Grid.Row="1"  Click="buttonKeyPad" Tag="1" >
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock  FontSize="28" >
								<Run Text="1"/>
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <Button x:Name="buttonKeyPad2" Style="{StaticResource KeypadButtonStyle}" Grid.Row="1" Grid.Column="3" Click="buttonKeyPad" Tag="2">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock  FontSize="28"  >
								<Run Text="2"/>
                                    </TextBlock>

                                </StackPanel>
                            </Button>
                            <Button x:Name="buttonKeyPad3" Style="{StaticResource KeypadButtonStyle}" Grid.Row="1" Grid.Column="5" Click="buttonKeyPad" Tag="3">
                                <StackPanel Orientation="Vertical" >
                                    <TextBlock  FontSize="28" >
								<Run Text="3"/>
                                    </TextBlock>

                                </StackPanel>
                            </Button>

                            <Button x:Name="buttonKeyPad4" Style="{StaticResource KeypadButtonStyle}" Grid.Row="3" Grid.Column="1" Click="buttonKeyPad" Tag="4">
                                <StackPanel Orientation="Vertical" >
                                    <TextBlock   FontSize="28" >
								<Run Text="4"/>
                                    </TextBlock>

                                </StackPanel>
                            </Button>
                            <Button x:Name="buttonKeyPad5" Style="{StaticResource KeypadButtonStyle}" Grid.Row="3" Grid.Column="3" Click="buttonKeyPad" Tag="5">
                                <StackPanel Orientation="Vertical" >
                                    <TextBlock  FontSize="28" >
								<Run Text="5"/>
                                    </TextBlock>

                                </StackPanel>
                            </Button>
                            <Button x:Name="buttonKeyPad6" Style="{StaticResource KeypadButtonStyle}" Grid.Row="3" Grid.Column="5" Click="buttonKeyPad" Tag="6">
                                <StackPanel Orientation="Vertical" >
                                    <TextBlock  FontSize="28">
								<Run Text="6"/>
                                    </TextBlock>

                                </StackPanel>
                            </Button>

                            <Button Grid.Column="1"  x:Name="buttonKeyPad7" Style="{StaticResource KeypadButtonStyle}"  Grid.Row="5" Click="buttonKeyPad" Tag="7">
                                <StackPanel Orientation="Vertical" >
                                    <TextBlock  FontSize="28">
								<Run Text="7"/>
                                    </TextBlock>

                                </StackPanel>
                            </Button>
                            <Button x:Name="buttonKeyPad8" Style="{StaticResource KeypadButtonStyle}" Grid.Row="5" Grid.Column="3" Click="buttonKeyPad" Tag="8">
                                <StackPanel Orientation="Vertical" >
                                    <TextBlock  FontSize="28" >
								<Run Text="8"/>
                                    </TextBlock>

                                </StackPanel>
                            </Button>
                            <Button x:Name="buttonKeyPad9" Style="{StaticResource KeypadButtonStyle}" Grid.Row="5" Grid.Column="5" Click="buttonKeyPad" Tag="9">
                                <StackPanel Orientation="Vertical" >
                                    <TextBlock  FontSize="28">
								<Run Text="9"/>
                                    </TextBlock>

                                </StackPanel>
                            </Button>

                            <Button x:Name="buttonKeyPadStar" Grid.Column ="1"  Style="{StaticResource KeypadButtonStyle}"  Grid.Row="7" Click="buttonKeyPad" Tag="*">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock  FontSize="28" >
								<Run Text="*"/>
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <Button x:Name="buttonKeyPad0" Style="{StaticResource KeypadButtonStyle}" Grid.Row="7" Grid.Column="3" Click="buttonKeyPad" Tag="0">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock x:Name="textBlockKeyPad0"  FontSize="28" >
								<Run Text="0"/>
                                    </TextBlock>

                                </StackPanel>
                            </Button>
                            <Button x:Name="buttonKeyPadPound" Style="{StaticResource KeypadButtonStyle}" Grid.Row="7" Grid.Column="5" Click="buttonKeyPad" Tag="#">
                                <StackPanel Orientation="vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Margin="0" FontSize="28">
								<Run Text="#"/>
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                    </Grid>
                </videoWrapper:VATRPOverlay.OverlayNumpadChild>
                
                <videoWrapper:VATRPOverlay.OverlayCommandbarChild>
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="70"/>
                            <RowDefinition Height="15"/>
                            <RowDefinition Height="70"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="110"/>
                            <ColumnDefinition Width="110"/>
                            <ColumnDefinition Width="110"/>
                            <ColumnDefinition Width="110"/>
                            <ColumnDefinition Width="110"/>
                        </Grid.ColumnDefinitions>

                        <ToggleButton x:Name="BtnVideoOn" Grid.Row="0" Grid.Column="0" 
						  Click="OnToggleVideo" IsChecked="{Binding IsVideoOn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <ToggleButton.Resources>
                                <Grid x:Key="VideoOnPressed">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Rectangle  Fill="{StaticResource CallBarNormalBg}" Grid.Row="0" Grid.RowSpan="2">

                                    </Rectangle>
                                    <Rectangle Width="59" Height="40" 
                                               Fill="{StaticResource NavigationBarNormalButtonFont}" 
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.RowSpan="2">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="..\Resources\video_off.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                                <Grid x:Key="VideoOnNormal">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Rectangle  Fill="{StaticResource CallBarNormalBg}" Grid.Row="0" Grid.RowSpan="2">

                                    </Rectangle>
                                    <Rectangle Width="59" Height="40" Fill="{StaticResource NavigationBarNormalButtonFont}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.RowSpan="2">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="..\Resources\video_on.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                            </ToggleButton.Resources>
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Opacity" Value="0.4" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Content" Value="{StaticResource VideoOnNormal}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid Background="Transparent">

                                                    <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                                                        <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.5" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Opacity" Value="0.8" />
                                            <Setter Property="Content" Value="{StaticResource VideoOnPressed}" />
                                        </Trigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                                            </MultiDataTrigger.Conditions>

                                            <Setter Property="Opacity" Value="0.9"/>
                                            <Setter Property="Content" Value="{StaticResource VideoOnPressed}"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ToggleButton x:Name="BtnMuteOn" Grid.Row="0" Grid.Column="1" 
						  Click="OnMute" IsChecked="{Binding IsMuteOn}"
						  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <ToggleButton.Resources>
                                <Grid x:Key="MutePressed">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Rectangle  Fill="{StaticResource CallBarPressedBg}" Grid.Row="0" Grid.RowSpan="2">

                                    </Rectangle>
                                    <Rectangle Width="38" Height="43" Fill="{StaticResource NavigationBarNormalButtonFont}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.RowSpan="2">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="..\Resources\mute_on.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                                <Grid x:Key="MuteNormal">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Rectangle  Fill="{StaticResource CallBarNormalBg}" Grid.Row="0" Grid.RowSpan="2">

                                    </Rectangle>
                                    <Rectangle Width="38" Height="43" Margin="0" Fill="{StaticResource NavigationBarNormalButtonFont}" 
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.RowSpan="2">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="..\Resources\mute_on.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                            </ToggleButton.Resources>
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Opacity" Value="0.4" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Content" Value="{StaticResource MuteNormal}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid Background="Transparent">

                                                    <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                                                        <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.5" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Opacity" Value="0.8" />
                                            <Setter Property="Content" Value="{StaticResource MutePressed}" />
                                        </Trigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                                            </MultiDataTrigger.Conditions>

                                            <Setter Property="Opacity" Value="0.9"/>
                                            <Setter Property="Content" Value="{StaticResource MutePressed}"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ToggleButton x:Name="BtnSpeaker" Grid.Row="0" Grid.Column="2" 
						  Click="OnToggleSpeaker" IsChecked="{Binding IsSpeakerOn}"
						  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <ToggleButton.Resources>
                                <Grid x:Key="SpeakerPressed">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Rectangle  Fill="{StaticResource CallBarPressedBg}" Grid.Row="0" Grid.RowSpan="2">

                                    </Rectangle>
                                    <Rectangle Width="39" Height="34" Fill="{StaticResource NavigationBarNormalButtonFont}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.RowSpan="2">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="..\Resources\speaker_off.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                                <Grid x:Key="SpeakerNormal">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Rectangle  Fill="{StaticResource CallBarNormalBg}" Grid.Row="0" Grid.RowSpan="2">

                                    </Rectangle>
                                    <Rectangle Width="39" Height="34" Margin="0" Fill="{StaticResource NavigationBarNormalButtonFont}" 
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.RowSpan="2">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="..\Resources\speaker_on.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                            </ToggleButton.Resources>
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Opacity" Value="0.4" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Content" Value="{StaticResource SpeakerNormal}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid Background="Transparent">

                                                    <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                                                        <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.5" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Opacity" Value="0.8" />
                                    <Setter Property="Content" Value="{StaticResource SpeakerPressed}" />
                                        </Trigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                                            </MultiDataTrigger.Conditions>

                                            <Setter Property="Opacity" Value="0.9"/>
                                            <Setter Property="Content" Value="{StaticResource SpeakerPressed}"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ToggleButton x:Name="BtnNumpad" Grid.Row="0" Grid.Column="3" 
						  Click="OnToggleKeypad" IsChecked="{Binding IsNumpadOn}"
						  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <ToggleButton.Resources>
                        <Grid x:Key="NumpadPressed">
                            <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Rectangle  Fill="{StaticResource CallBarNormalBg}" Grid.Row="0" Grid.RowSpan="2">

                                    </Rectangle>
                                    <Rectangle Width="36" Height="36" Fill="{StaticResource NavigationBarNormalButtonFont}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.RowSpan="2">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="..\Resources\numpad.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                                <Grid x:Key="NumpadNormal">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Rectangle  Fill="{StaticResource CallBarNormalBg}" Grid.Row="0" Grid.RowSpan="2">

                                    </Rectangle>
                                    <Rectangle Width="36" Height="36" Margin="0" Fill="{StaticResource NavigationBarNormalButtonFont}" 
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.RowSpan="2">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="..\Resources\numpad.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                            </ToggleButton.Resources>
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Opacity" Value="0.4" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Content" Value="{StaticResource NumpadNormal}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid Background="Transparent">

                                                    <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                                                        <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.5" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Opacity" Value="0.8" />
                                    <Setter Property="Content" Value="{StaticResource NumpadPressed}" />
                                        </Trigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                                            </MultiDataTrigger.Conditions>

                                            <Setter Property="Opacity" Value="0.9"/>
                                            <Setter Property="Content" Value="{StaticResource NumpadPressed}"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ToggleButton x:Name="BtnRTT" Grid.Row="0" Grid.Column="4" 
						  Click="OnToggleRTT" IsChecked="{Binding IsRttOn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <ToggleButton.Resources>
                                <Grid x:Key="RTTPressed">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Rectangle  Fill="{StaticResource CallBarNormalBg}" Grid.Row="0" Grid.RowSpan="2">

                                    </Rectangle>
                                    <Rectangle Width="42" Height="39" Fill="{StaticResource NavigationBarNormalButtonFont}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.RowSpan="2">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="..\Resources\rtt.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                                <Grid x:Key="RTTNormal">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Rectangle  Fill="{StaticResource CallBarNormalBg}" Grid.Row="0" Grid.RowSpan="2">

                                    </Rectangle>
                                    <Rectangle Width="42" Height="39" Margin="0" Fill="{StaticResource NavigationBarNormalButtonFont}" 
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.RowSpan="2">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="..\Resources\rtt.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                            </ToggleButton.Resources>
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Opacity" Value="0.4" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Content" Value="{StaticResource RTTNormal}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid Background="Transparent">

                                                    <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                                                        <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.5" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Opacity" Value="0.8" />
                                    <Setter Property="Content" Value="{StaticResource RTTPressed}" />
                                        </Trigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                                            </MultiDataTrigger.Conditions>

                                            <Setter Property="Opacity" Value="0.9"/>
                                            <Setter Property="Content" Value="{StaticResource RTTPressed}"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5" 
                                Click="OnEndCall"  
                                Width="250"
                                 BorderThickness="0" >

                            <Button.Resources>
                                <Grid x:Key="CallButtonNormal" 
                            Background="{StaticResource CallBarEndCallBg}" >

                                    <TextBlock Text="End Call" HorizontalAlignment="Center" FontSize="34" VerticalAlignment="Center" 
                               Foreground="White"/>

                                </Grid>
                            </Button.Resources>

                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Opacity" Value="0.8" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="Content" Value="{StaticResource CallButtonNormal}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid Background="Transparent">

                                                    <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                                                        <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.9" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Opacity" Value="0.7" />
                                        </Trigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                                            </MultiDataTrigger.Conditions>

                                            <Setter Property="Opacity" Value="0.7"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                    </Grid>
                </videoWrapper:VATRPOverlay.OverlayCommandbarChild>
                
                <videoWrapper:ManagedVideoControl x:Name="ctrlVideo" Width="{Binding VideoWidth}" Height="{Binding VideoHeight}" 
                                                  VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                  >
                </videoWrapper:ManagedVideoControl>

            </videoWrapper:VATRPOverlay>
        </StackPanel>
    </Grid>
</UserControl>
